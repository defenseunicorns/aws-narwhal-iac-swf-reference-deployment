includes:
  - deploy: ./tasks/deploy.yaml
  - swf: ./tasks/swf.yaml

tasks:
  - name: terraform-one-time-bootstrap-per-env
    actions:
      - description: |
          One time bootstrapping of a terraform environment for both the bootstrap and swf modules using the bootstrap root module
          This sets up the backend resources in AWS and templates out the backend.tf file in each root module and generates the ${root_module}-backend.tfconfig files in the ./iac/env/${env}/backends directory.
        task: deploy:terraform-one-time-bootstrap-per-env
        with:
          env: ${ENV}

  - name: terraform-init-aws-bootstrap
    actions:
      - description: "terraform init AWS SWF IaC Bootstrap module"
        task: deploy:terraform-init
        with:
          root_module: bootstrap

  - name: terraform-plan-aws-bootstrap
    actions:
      - description: "Terraform plan AWS SWF IaC Bootstrap module"
        task: deploy:terraform-plan
        with:
          env: ${ENV}
          root_module: bootstrap
          var_files: '["common.terraform.tfvars", "bootstrap.terraform.tfvars"]'

  - name: terraform-apply-aws-bootstrap
    actions:
      - description: "Terraform apply AWS SWF IaC Bootstrap module"
        task: deploy:terraform-apply
        with:
          env: ${ENV}
          root_module: bootstrap
          var_files: '["common.terraform.tfvars", "bootstrap.terraform.tfvars"]'

  - name: terraform-init-aws-swf
    actions:
      - description: "Terraform init AWS SWF IaC swf module"
        task: deploy:terraform-init
        with:
          root_module: swf

  - name: terraform-plan-aws-swf
    actions:
      - description: "Terraform plan AWS SWF IaC swf module"
        task: deploy:terraform-plan
        with:
          env: ${ENV}
          root_module: swf
          var_files: '["common.terraform.tfvars", "swf.terraform.tfvars"]'

  - name: terraform-apply-aws-swf
    actions:
      - description: "Terraform apply AWS SWF IaC swf module"
        task: deploy:terraform-apply
        with:
          env: ${ENV}
          root_module: swf
          var_files: '["common.terraform.tfvars", "swf.terraform.tfvars"]'
      - description: "Move uds-config.yaml"
        task: swf:uds-config

  - name: terraform-init-aws-transit-gateway
    actions:
      - description: "Terraform init AWS SWF IaC transit-gateway module"
        task: deploy:terraform-init
        with:
          root_module: transit-gateway

  # Ideally, we would like to ensure that the swf module is applied and state reconciled before the transit-gateway module
  - name: terraform-plan-aws-transit-gateway
    actions:
      # - description: "Terraform apply AWS SWF IaC swf module"
      #   task: deploy:terraform-apply
      #   with:
      #     env: ${ENV}
      #     root_module: swf
      #     var_files: '["common.terraform.tfvars", "swf.terraform.tfvars"]'
      - description: "Terraform plan AWS SWF IaC transit-gateway module"
        task: deploy:terraform-plan
        with:
          env: ${ENV}
          root_module: transit-gateway
          var_files: '["common.terraform.tfvars", "context.tfvars", "swf-backend.tfconfig"]'

  - name: terraform-apply-aws-transit-gateway
    actions:
      # - description: "Terraform apply AWS SWF IaC swf module"
      #   task: deploy:terraform-apply
      #   with:
      #     env: ${ENV}
      #     root_module: swf
      #     var_files: '["common.terraform.tfvars", "swf.terraform.tfvars"]'
      - description: "Terraform apply AWS SWF IaC transit-gateway module"
        task: deploy:terraform-apply
        with:
          env: ${ENV}
          root_module: transit-gateway
          var_files: '["common.terraform.tfvars", "context.tfvars", "swf-backend.tfconfig"]'

  - name: bundle-all
    description: "Creates the zarf package, then builds and deploys the bundle"
    actions:
      - task: swf:zarf-create
      - task: swf:bundle-create
      - task: swf:bundle-deploy

  - name: zarf-create
    actions:
      - description: "Create the zarf package"
        task: swf:zarf-create

  - name: zarf-deploy
    actions:
      - description: "Deploy the zarf package"
        task: swf:zarf-deploy

  - name: bundle-create
    actions:
      - description: "Create the swf bundle"
        task: swf:bundle-create

  - name: bundle-deploy
    actions:
      - description: "Deploy the swf bundle"
        task: swf:bundle-deploy

  - name: echo
    actions:
      - description: "Just echo"
        task: deploy:just-echo
        with:
          list: '["hello", "world"]'
          env: ${ENV}
